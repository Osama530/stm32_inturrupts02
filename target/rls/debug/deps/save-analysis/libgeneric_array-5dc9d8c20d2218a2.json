{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2","program":"/home/iot-dev/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","generic_array","/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=5dc9d8c20d2218a2","-C","extra-filename=-5dc9d8c20d2218a2","--out-dir","/home/iot-dev/Documents/Rust_prac/stm_interrupt/target/rls/debug/deps","-L","dependency=/home/iot-dev/Documents/Rust_prac/stm_interrupt/target/rls/debug/deps","--extern","typenum=/home/iot-dev/Documents/Rust_prac/stm_interrupt/target/rls/debug/deps/libtypenum-314fa5b9cccc93d8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/iot-dev/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/iot-dev/Documents/Rust_prac/stm_interrupt/target/rls/debug/deps/libgeneric_array-5dc9d8c20d2218a2.rmeta"},"prelude":{"crate_id":{"name":"generic_array","disambiguator":[10374141212024699615,14974069658640056076]},"crate_root":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src","external_crates":[{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","num":4,"id":{"name":"typenum","disambiguator":[2780944663852173345,11662497732667689637]}}],"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":0,"byte_end":17610,"line_start":1,"line_end":635,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":200},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":1620,"byte_end":1636,"line_start":71,"line_end":71,"column_start":21,"column_end":37},"alias_span":null,"name":"GenericArrayIter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":0,"byte_end":17610,"line_start":1,"line_end":635,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":40},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":126},{"krate":0,"index":144},{"krate":0,"index":189},{"krate":0,"index":257},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":364},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":377},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":392},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":407},{"krate":0,"index":411},{"krate":0,"index":416},{"krate":0,"index":422},{"krate":0,"index":426},{"krate":0,"index":431},{"krate":0,"index":436},{"krate":0,"index":440},{"krate":0,"index":447},{"krate":0,"index":454},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":480},{"krate":0,"index":485},{"krate":0,"index":501},{"krate":0,"index":508},{"krate":0,"index":513},{"krate":0,"index":518},{"krate":0,"index":522},{"krate":0,"index":528}],"decl_id":null,"docs":" This crate implements a structure that can be used as a generic array type.\n Core Rust array types `[T; N]` can't be used generically with\n respect to `N`, so for example this:","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":1013,"byte_end":1035,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":1037,"byte_end":1047,"line_start":40,"line_end":40,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":126},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/arr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"arr","qualname":"::arr","value":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/arr.rs","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":134},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" Implementation for `arr!` macro.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":130},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/arr.rs","byte_start":26746,"byte_end":26755,"line_start":8,"line_end":8,"column_start":11,"column_end":20},"name":"AddLength","qualname":"::arr::AddLength","value":"AddLength<T, N: ArrayLength<T>>: ArrayLength<T>","parent":null,"children":[{"krate":0,"index":133}],"decl_id":null,"docs":" Helper trait for `arr!` macro\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":133},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/arr.rs","byte_start":26832,"byte_end":26838,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Output","qualname":"::arr::AddLength::Output","value":"type Output: ArrayLength<T>;","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" Resulting length\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":139},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/arr.rs","byte_start":27111,"byte_end":27114,"line_start":23,"line_end":23,"column_start":10,"column_end":13},"name":"Inc","qualname":"::arr::Inc","value":"<U as AddLength<T, U1>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Helper type for `arr!` macro\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":144},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/functional.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"functional","qualname":"::functional","value":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/functional.rs","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":152},{"krate":0,"index":158},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":181},{"krate":0,"index":185}],"decl_id":null,"docs":" Functional programming with generic sequences","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":148},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/functional.rs","byte_start":28829,"byte_end":28850,"line_start":12,"line_end":12,"column_start":18,"column_end":39},"name":"MappedGenericSequence","qualname":"::functional::MappedGenericSequence","value":"MappedGenericSequence<T, U>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":151}],"decl_id":null,"docs":" Defines the relationship between one generic sequence and another,\n for operations such as `map` and `zip`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":151},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/functional.rs","byte_start":28962,"byte_end":28968,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Mapped","qualname":"::functional::MappedGenericSequence::Mapped","value":"type Mapped: GenericSequence<U, Length = Self::Length>;","parent":{"krate":0,"index":148},"children":[],"decl_id":null,"docs":" Mapped sequence type\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":164},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/functional.rs","byte_start":29759,"byte_end":29773,"line_start":39,"line_end":39,"column_start":10,"column_end":24},"name":"MappedSequence","qualname":"::functional::MappedSequence","value":"<<S as MappedGenericSequence<T, U>>::Mapped as GenericSequence<U>>::Sequence","parent":null,"children":[],"decl_id":null,"docs":" Accessor type for a mapped generic sequence\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":168},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/functional.rs","byte_start":29954,"byte_end":29972,"line_start":43,"line_end":43,"column_start":18,"column_end":36},"name":"FunctionalSequence","qualname":"::functional::FunctionalSequence","value":"FunctionalSequence<T>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":178}],"decl_id":null,"docs":" Defines functional programming methods for generic sequences\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/functional.rs","byte_start":30268,"byte_end":30271,"line_start":48,"line_end":48,"column_start":8,"column_end":11},"name":"map","qualname":"::functional::FunctionalSequence::map","value":"fn <U, F> (self, f: F) -> MappedSequence<Self, T, U>","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Maps a `GenericSequence` to another `GenericSequence`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/functional.rs","byte_start":30925,"byte_end":30928,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"zip","qualname":"::functional::FunctionalSequence::zip","value":"fn <B, Rhs, U, F> (self, rhs: Rhs, f: F) -> MappedSequence<Self, T, U>","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Combines two `GenericSequence` instances and iterates through both of them,\n initializing a new `GenericSequence` with the result of the zipped mapping function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/functional.rs","byte_start":30907,"byte_end":30916,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/functional.rs","byte_start":31502,"byte_end":31506,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"fold","qualname":"::functional::FunctionalSequence::fold","value":"fn <U, F> (self, init: U, f: F) -> U","parent":{"krate":0,"index":168},"children":[],"decl_id":null,"docs":" Folds (or reduces) a sequence of data into a single value.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":189},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":200},{"krate":0,"index":206},{"krate":0,"index":211},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":229},{"krate":0,"index":242},{"krate":0,"index":250},{"krate":0,"index":254}],"decl_id":null,"docs":" `GenericArray` iterator implementation.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":200},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":32148,"byte_end":32164,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"GenericArrayIter","qualname":"::iter::GenericArrayIter","value":"GenericArrayIter {  }","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205}],"decl_id":null,"docs":" An iterator that moves out of a `GenericArray`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":32849,"byte_end":32857,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<GenericArrayIter<T, N>>::as_slice","value":"fn (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":32827,"byte_end":32836,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":33045,"byte_end":33057,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<GenericArrayIter<T, N>>::as_mut_slice","value":"fn (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a mutable slice\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":33023,"byte_end":33032,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":257},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::sequence","value":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":293},{"krate":0,"index":301},{"krate":0,"index":306},{"krate":0,"index":311},{"krate":0,"index":317},{"krate":0,"index":323},{"krate":0,"index":329},{"krate":0,"index":336},{"krate":0,"index":342}],"decl_id":null,"docs":" Useful traits for manipulating sequences of data stored in `GenericArray`s\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":266},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":38302,"byte_end":38317,"line_start":11,"line_end":11,"column_start":18,"column_end":33},"name":"GenericSequence","qualname":"::sequence::GenericSequence","value":"GenericSequence<T>: Sized + IntoIterator","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":277}],"decl_id":null,"docs":" Defines some sequence with an associated length and iteration capabilities.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":268},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":38397,"byte_end":38403,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Length","qualname":"::sequence::GenericSequence::Length","value":"type Length: ArrayLength<T>;","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" `GenericArray` associated length\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":269},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":38536,"byte_end":38544,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"Sequence","qualname":"::sequence::GenericSequence::Sequence","value":"type Sequence: GenericSequence<T, Length = Self::Length> + FromIterator<T>;","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Concrete sequence type used in conjuction with reference implementations of `GenericSequence`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":38831,"byte_end":38839,"line_start":22,"line_end":22,"column_start":8,"column_end":16},"name":"generate","qualname":"::sequence::GenericSequence::generate","value":"fn <F> (f: F) -> Self::Sequence","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":" Initializes a new sequence instance using the given function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":38939,"byte_end":38951,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"inverted_zip","qualname":"::sequence::GenericSequence::inverted_zip","value":"fn <B, U, F> (self, lhs: GenericArray<B, Self::Length>, mut f: F) -> MappedSequence<GenericArray<B, Self::Length>, B, U>","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":39895,"byte_end":39908,"line_start":57,"line_end":57,"column_start":8,"column_end":21},"name":"inverted_zip2","qualname":"::sequence::GenericSequence::inverted_zip2","value":"fn <B, Lhs, U, F> (self, lhs: Lhs, mut f: F) -> MappedSequence<Lhs, B, U>","parent":{"krate":0,"index":266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":283},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":40578,"byte_end":40590,"line_start":72,"line_end":72,"column_start":10,"column_end":22},"name":"SequenceItem","qualname":"::sequence::SequenceItem","value":"<T as IntoIterator>::Item","parent":null,"children":[],"decl_id":null,"docs":" Accessor for `GenericSequence` item type, which is really `IntoIterator::Item`","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":301},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":41520,"byte_end":41528,"line_start":110,"line_end":110,"column_start":18,"column_end":26},"name":"Lengthen","qualname":"::sequence::Lengthen","value":"Lengthen<T>: Sized + GenericSequence<T>","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" Defines any `GenericSequence` which can be lengthened or extended by appending\n or prepending an element to it.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":303},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":41637,"byte_end":41643,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"Longer","qualname":"::sequence::Lengthen::Longer","value":"type Longer: Shorten<T, Shorter = Self>;","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" `GenericSequence` that has one more element than `Self`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":41962,"byte_end":41968,"line_start":125,"line_end":125,"column_start":8,"column_end":14},"name":"append","qualname":"::sequence::Lengthen::append","value":"fn (self, last: T) -> Self::Longer","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Returns a new array with the given element appended to the end of it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":42294,"byte_end":42301,"line_start":138,"line_end":138,"column_start":8,"column_end":15},"name":"prepend","qualname":"::sequence::Lengthen::prepend","value":"fn (self, first: T) -> Self::Longer","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Returns a new array with the given element prepended to the front of it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":306},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":42576,"byte_end":42583,"line_start":145,"line_end":145,"column_start":18,"column_end":25},"name":"Shorten","qualname":"::sequence::Shorten","value":"Shorten<T>: Sized + GenericSequence<T>","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":" Defines a `GenericSequence` which can be shortened by removing the first or last element from it.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":308},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":42692,"byte_end":42699,"line_start":147,"line_end":147,"column_start":10,"column_end":17},"name":"Shorter","qualname":"::sequence::Shorten::Shorter","value":"type Shorter: Lengthen<T, Longer = Self>;","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" `GenericSequence` that has one less element than `Self`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":43061,"byte_end":43069,"line_start":161,"line_end":161,"column_start":8,"column_end":16},"name":"pop_back","qualname":"::sequence::Shorten::pop_back","value":"fn (self) -> (Self::Shorter, T)","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Returns a new array without the last element, and the last element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":43425,"byte_end":43434,"line_start":174,"line_end":174,"column_start":8,"column_end":17},"name":"pop_front","qualname":"::sequence::Shorten::pop_front","value":"fn (self) -> (T, Self::Shorter)","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Returns a new array without the first element, and the first element.\n Example:","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":323},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":45378,"byte_end":45383,"line_start":246,"line_end":246,"column_start":18,"column_end":23},"name":"Split","qualname":"::sequence::Split","value":"Split<T, K>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"decl_id":null,"docs":" Defines a `GenericSequence` that can be split into two parts at a given pivot index.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":326},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":45503,"byte_end":45508,"line_start":251,"line_end":251,"column_start":10,"column_end":15},"name":"First","qualname":"::sequence::Split::First","value":"type First: GenericSequence<T>;","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" First part of the resulting split array\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":327},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":45590,"byte_end":45596,"line_start":253,"line_end":253,"column_start":10,"column_end":16},"name":"Second","qualname":"::sequence::Split::Second","value":"type Second: GenericSequence<T>;","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Second part of the resulting split array\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":45716,"byte_end":45721,"line_start":256,"line_end":256,"column_start":8,"column_end":13},"name":"split","qualname":"::sequence::Split::split","value":"fn (self) -> (Self::First, Self::Second)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Splits an array at the given index, returning the separate parts of the array.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":336},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":46459,"byte_end":46465,"line_start":283,"line_end":283,"column_start":18,"column_end":24},"name":"Concat","qualname":"::sequence::Concat","value":"Concat<T, M>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341}],"decl_id":null,"docs":" Defines `GenericSequence`s which can be joined together, forming a larger array.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":339},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":46585,"byte_end":46589,"line_start":288,"line_end":288,"column_start":10,"column_end":14},"name":"Rest","qualname":"::sequence::Concat::Rest","value":"type Rest: GenericSequence<T, Length = M>;","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":" Sequence to be concatenated with `self`\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":340},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":46692,"byte_end":46698,"line_start":291,"line_end":291,"column_start":10,"column_end":16},"name":"Output","qualname":"::sequence::Concat::Output","value":"type Output: GenericSequence<T>;","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":" Resulting sequence formed by the concatenation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":46776,"byte_end":46782,"line_start":294,"line_end":294,"column_start":8,"column_end":14},"name":"concat","qualname":"::sequence::Concat::concat","value":"fn (self, rest: Self::Rest) -> Self::Output","parent":{"krate":0,"index":336},"children":[],"decl_id":null,"docs":" Concatenate, or join, two sequences.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":352},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":1768,"byte_end":1779,"line_start":75,"line_end":75,"column_start":18,"column_end":29},"name":"ArrayLength","qualname":"::ArrayLength","value":"ArrayLength<T>: Unsigned","parent":null,"children":[{"krate":0,"index":354}],"decl_id":null,"docs":" Trait making `GenericArray` work, marking types to be used as length of an array\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":354},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":1873,"byte_end":1882,"line_start":77,"line_end":77,"column_start":10,"column_end":19},"name":"ArrayType","qualname":"::ArrayLength::ArrayType","value":"type ArrayType;","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Associated type representing the array type for the number\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":2109,"byte_end":2129,"line_start":89,"line_end":89,"column_start":12,"column_end":32},"name":"GenericArrayImplEven","qualname":"::GenericArrayImplEven","value":"GenericArrayImplEven {  }","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"decl_id":null,"docs":" Internal type used to generate a struct of appropriate size\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":2049,"byte_end":2068,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":2070,"byte_end":2080,"line_start":87,"line_end":87,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":371},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":2694,"byte_end":2713,"line_start":111,"line_end":111,"column_start":12,"column_end":31},"name":"GenericArrayImplOdd","qualname":"::GenericArrayImplOdd","value":"GenericArrayImplOdd {  }","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"decl_id":null,"docs":" Internal type used to generate a struct of appropriate size\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":2634,"byte_end":2653,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":2655,"byte_end":2665,"line_start":109,"line_end":109,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":392},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3579,"byte_end":3591,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"GenericArray","qualname":"::GenericArray","value":"GenericArray {  }","parent":null,"children":[{"krate":0,"index":395}],"decl_id":null,"docs":" Struct representing a generic array - `GenericArray<T, N>` works like [T; N]\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3525,"byte_end":3544,"line_start":140,"line_end":140,"column_start":1,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3546,"byte_end":3566,"line_start":141,"line_end":141,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":411},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":4572,"byte_end":4584,"line_start":177,"line_end":177,"column_start":12,"column_end":24},"name":"ArrayBuilder","qualname":"::ArrayBuilder","value":"ArrayBuilder {  }","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"decl_id":null,"docs":" Creates an array one element at a time using a mutable iterator\n you can write to with `ptr::write`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":4785,"byte_end":4788,"line_start":185,"line_end":185,"column_start":19,"column_end":22},"name":"new","qualname":"<ArrayBuilder<T, N>>::new","value":"fn () -> ArrayBuilder<T, N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":4756,"byte_end":4765,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":5226,"byte_end":5239,"line_start":198,"line_end":198,"column_start":19,"column_end":32},"name":"iter_position","qualname":"<ArrayBuilder<T, N>>::iter_position","value":"fn (&mut self) -> (slice::IterMut<T>, &mut usize)","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable iterator for writing to the array using `ptr::write`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":5197,"byte_end":5206,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":5507,"byte_end":5517,"line_start":206,"line_end":206,"column_start":19,"column_end":29},"name":"into_inner","qualname":"<ArrayBuilder<T, N>>::into_inner","value":"fn (self) -> GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" When done writing (assuming all elements have been written to),\n get the inner array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":5478,"byte_end":5487,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":426},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":6100,"byte_end":6113,"line_start":230,"line_end":230,"column_start":12,"column_end":25},"name":"ArrayConsumer","qualname":"::ArrayConsumer","value":"ArrayConsumer {  }","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"decl_id":null,"docs":" Consumes an array.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":6315,"byte_end":6318,"line_start":238,"line_end":238,"column_start":19,"column_end":22},"name":"new","qualname":"<ArrayConsumer<T, N>>::new","value":"fn (array: GenericArray<T, N>) -> ArrayConsumer<T, N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":6286,"byte_end":6295,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":6749,"byte_end":6762,"line_start":251,"line_end":251,"column_start":19,"column_end":32},"name":"iter_position","qualname":"<ArrayConsumer<T, N>>::iter_position","value":"fn (&mut self) -> (slice::Iter<T>, &mut usize)","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator and mutable reference to the internal position\n to keep track of consumed elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":6720,"byte_end":6729,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":13389,"byte_end":13397,"line_start":492,"line_end":492,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<GenericArray<T, N>>::as_slice","value":"fn (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":13367,"byte_end":13376,"line_start":491,"line_end":491,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":13536,"byte_end":13548,"line_start":498,"line_end":498,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<GenericArray<T, N>>::as_mut_slice","value":"fn (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice containing the entire array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":13514,"byte_end":13523,"line_start":497,"line_end":497,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":13791,"byte_end":13801,"line_start":506,"line_end":506,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<GenericArray<T, N>>::from_slice","value":"fn (slice: &[T]) -> &GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts slice to a generic array reference with inferred length;","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":13769,"byte_end":13778,"line_start":505,"line_end":505,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":14047,"byte_end":14061,"line_start":514,"line_end":514,"column_start":12,"column_end":26},"name":"from_mut_slice","qualname":"<GenericArray<T, N>>::from_mut_slice","value":"fn (slice: &mut [T]) -> &mut GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts mutable slice to a mutable generic array reference","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":14025,"byte_end":14034,"line_start":513,"line_end":513,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":15262,"byte_end":15278,"line_start":551,"line_end":551,"column_start":12,"column_end":28},"name":"clone_from_slice","qualname":"<GenericArray<T, N>>::clone_from_slice","value":"fn (list: &[T]) -> GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `GenericArray` from a slice by cloning its content","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":15240,"byte_end":15249,"line_start":550,"line_end":550,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":15720,"byte_end":15735,"line_start":564,"line_end":564,"column_start":12,"column_end":27},"name":"from_exact_iter","qualname":"<GenericArray<T, N>>::from_exact_iter","value":"fn <I> (iter: I) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `GenericArray` instance from an iterator with a known exact size.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":528},"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":16640,"byte_end":16649,"line_start":597,"line_end":597,"column_start":15,"column_end":24},"name":"transmute","qualname":"::transmute","value":"fn <A, B> (a: A) -> B","parent":null,"children":[],"decl_id":null,"docs":" A reimplementation of the `transmute` function, avoiding problems\n when the compiler can't prove equal sizes.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":16599,"byte_end":16608,"line_start":595,"line_end":595,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/hex.rs","byte_start":18349,"byte_end":18361,"line_start":27,"line_end":27,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/hex.rs","byte_start":19889,"byte_end":19901,"line_start":67,"line_end":67,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":21646,"byte_end":21658,"line_start":11,"line_end":11,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":21825,"byte_end":21837,"line_start":21,"line_end":21,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":21994,"byte_end":22006,"line_start":30,"line_end":30,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":22114,"byte_end":22126,"line_start":37,"line_end":37,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":22269,"byte_end":22281,"line_start":45,"line_end":45,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":22356,"byte_end":22368,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":22591,"byte_end":22603,"line_start":56,"line_end":56,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":22799,"byte_end":22811,"line_start":65,"line_end":65,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":22981,"byte_end":22993,"line_start":74,"line_end":74,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":23151,"byte_end":23163,"line_start":84,"line_end":84,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":23333,"byte_end":23345,"line_start":94,"line_end":94,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":23499,"byte_end":23511,"line_start":104,"line_end":104,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":23677,"byte_end":23689,"line_start":114,"line_end":114,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/arr.rs","byte_start":26899,"byte_end":26901,"line_start":13,"line_end":13,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":32700,"byte_end":32716,"line_start":30,"line_end":30,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":33193,"byte_end":33205,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":33597,"byte_end":33613,"line_start":64,"line_end":64,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":33851,"byte_end":33867,"line_start":75,"line_end":75,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":34206,"byte_end":34222,"line_start":91,"line_end":91,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":34875,"byte_end":34891,"line_start":116,"line_end":116,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":36658,"byte_end":36674,"line_start":195,"line_end":195,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":37665,"byte_end":37681,"line_start":238,"line_end":238,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":37832,"byte_end":37848,"line_start":247,"line_end":247,"column_start":30,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":43520,"byte_end":43532,"line_start":177,"line_end":177,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":44414,"byte_end":44426,"line_start":211,"line_end":211,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":45803,"byte_end":45815,"line_start":259,"line_end":259,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":46868,"byte_end":46880,"line_start":297,"line_end":297,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":1924,"byte_end":1929,"line_start":80,"line_end":80,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":2243,"byte_end":2263,"line_start":95,"line_end":95,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":2536,"byte_end":2556,"line_start":105,"line_end":105,"column_start":33,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":2811,"byte_end":2830,"line_start":117,"line_end":117,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3104,"byte_end":3123,"line_start":127,"line_end":127,"column_start":33,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3189,"byte_end":3193,"line_start":129,"line_end":129,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3343,"byte_end":3347,"line_start":134,"line_end":134,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3696,"byte_end":3708,"line_start":146,"line_end":146,"column_start":50,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3768,"byte_end":3780,"line_start":147,"line_end":147,"column_start":50,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3814,"byte_end":3826,"line_start":149,"line_end":149,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":4074,"byte_end":4086,"line_start":161,"line_end":161,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":4710,"byte_end":4722,"line_start":182,"line_end":182,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":5715,"byte_end":5727,"line_start":215,"line_end":215,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":6239,"byte_end":6252,"line_start":235,"line_end":235,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":6906,"byte_end":6919,"line_start":256,"line_end":256,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":7729,"byte_end":7741,"line_start":290,"line_end":290,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":8787,"byte_end":8799,"line_start":331,"line_end":331,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":11508,"byte_end":11520,"line_start":420,"line_end":420,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":11724,"byte_end":11736,"line_start":428,"line_end":428,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":492},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":13254,"byte_end":13266,"line_start":486,"line_end":486,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":15031,"byte_end":15043,"line_start":543,"line_end":543,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":15459,"byte_end":15471,"line_start":557,"line_end":557,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":1511,"byte_end":1514,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":126}},{"kind":"Mod","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":1525,"byte_end":1535,"line_start":66,"line_end":66,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":144}},{"kind":"Mod","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":1546,"byte_end":1550,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":189}},{"kind":"Mod","span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":1561,"byte_end":1569,"line_start":68,"line_end":68,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":257}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/hex.rs","byte_start":18349,"byte_end":18361,"line_start":27,"line_end":27,"column_start":44,"column_end":56},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":7490}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/hex.rs","byte_start":19889,"byte_end":19901,"line_start":67,"line_end":67,"column_start":44,"column_end":56},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":7492}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":21646,"byte_end":21658,"line_start":11,"line_end":11,"column_start":33,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":2204}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":21825,"byte_end":21837,"line_start":21,"line_end":21,"column_start":29,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":2179}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":21994,"byte_end":22006,"line_start":30,"line_end":30,"column_start":27,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":1542}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":22114,"byte_end":22126,"line_start":37,"line_end":37,"column_start":37,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":2039}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":22269,"byte_end":22281,"line_start":45,"line_end":45,"column_start":23,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":2044}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":22356,"byte_end":22368,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":2076}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":22591,"byte_end":22603,"line_start":56,"line_end":56,"column_start":25,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":2065}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":22799,"byte_end":22811,"line_start":65,"line_end":65,"column_start":29,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":7479}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":22981,"byte_end":22993,"line_start":74,"line_end":74,"column_start":28,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":2285}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":23151,"byte_end":23163,"line_start":84,"line_end":84,"column_start":31,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":2288}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":23333,"byte_end":23345,"line_start":94,"line_end":94,"column_start":27,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":2212}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":23499,"byte_end":23511,"line_start":104,"line_end":104,"column_start":27,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":2215}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/impls.rs","byte_start":23677,"byte_end":23689,"line_start":114,"line_end":114,"column_start":27,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":7121}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/arr.rs","byte_start":26779,"byte_end":26790,"line_start":8,"line_end":8,"column_start":44,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":352},"to":{"krate":0,"index":130}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/arr.rs","byte_start":26899,"byte_end":26901,"line_start":13,"line_end":13,"column_start":38,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":136},"to":{"krate":0,"index":130}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/functional.rs","byte_start":28858,"byte_end":28873,"line_start":12,"line_end":12,"column_start":47,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":266},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/functional.rs","byte_start":29977,"byte_end":29992,"line_start":43,"line_end":43,"column_start":41,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":266},"to":{"krate":0,"index":168}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":32700,"byte_end":32716,"line_start":30,"line_end":30,"column_start":12,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":33193,"byte_end":33205,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":3808}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":33597,"byte_end":33613,"line_start":64,"line_end":64,"column_start":39,"column_end":55},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":7479}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":33851,"byte_end":33867,"line_start":75,"line_end":75,"column_start":21,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":34206,"byte_end":34222,"line_start":91,"line_end":91,"column_start":29,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":2179}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":34875,"byte_end":34891,"line_start":116,"line_end":116,"column_start":25,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":3510}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":36658,"byte_end":36674,"line_start":195,"line_end":195,"column_start":36,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":3767}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":37665,"byte_end":37681,"line_start":238,"line_end":238,"column_start":34,"column_end":50},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":3796}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/iter.rs","byte_start":37832,"byte_end":37848,"line_start":247,"line_end":247,"column_start":30,"column_end":46},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":200},"to":{"krate":1,"index":3867}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":38322,"byte_end":38327,"line_start":11,"line_end":11,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":1539},"to":{"krate":0,"index":266}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":38330,"byte_end":38342,"line_start":11,"line_end":11,"column_start":46,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":3808},"to":{"krate":0,"index":266}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":41533,"byte_end":41538,"line_start":110,"line_end":110,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":1539},"to":{"krate":0,"index":301}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":41541,"byte_end":41556,"line_start":110,"line_end":110,"column_start":39,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":266},"to":{"krate":0,"index":301}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":42588,"byte_end":42593,"line_start":145,"line_end":145,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":1539},"to":{"krate":0,"index":306}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":42596,"byte_end":42611,"line_start":145,"line_end":145,"column_start":38,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":266},"to":{"krate":0,"index":306}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":43520,"byte_end":43532,"line_start":177,"line_end":177,"column_start":51,"column_end":63},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":392},"to":{"krate":0,"index":301}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":44414,"byte_end":44426,"line_start":211,"line_end":211,"column_start":50,"column_end":62},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":392},"to":{"krate":0,"index":306}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":45391,"byte_end":45406,"line_start":246,"line_end":246,"column_start":31,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":266},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":45803,"byte_end":45815,"line_start":259,"line_end":259,"column_start":38,"column_end":50},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":392},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":46473,"byte_end":46488,"line_start":283,"line_end":283,"column_start":32,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":266},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/sequence.rs","byte_start":46868,"byte_end":46880,"line_start":297,"line_end":297,"column_start":39,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":392},"to":{"krate":0,"index":336}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":1784,"byte_end":1792,"line_start":75,"line_end":75,"column_start":34,"column_end":42},"kind":"SuperTrait","from":{"krate":4,"index":511},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":1924,"byte_end":1929,"line_start":80,"line_end":80,"column_start":35,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":4,"index":5903},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":2243,"byte_end":2263,"line_start":95,"line_end":95,"column_start":36,"column_end":56},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":358},"to":{"krate":1,"index":2179}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":2536,"byte_end":2556,"line_start":105,"line_end":105,"column_start":33,"column_end":53},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":358},"to":{"krate":1,"index":1542}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":2811,"byte_end":2830,"line_start":117,"line_end":117,"column_start":36,"column_end":55},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":371},"to":{"krate":1,"index":2179}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3104,"byte_end":3123,"line_start":127,"line_end":127,"column_start":33,"column_end":52},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":371},"to":{"krate":1,"index":1542}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3189,"byte_end":3193,"line_start":129,"line_end":129,"column_start":54,"column_end":58},"kind":{"Impl":{"id":34}},"from":{"krate":4,"index":5858},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3343,"byte_end":3347,"line_start":134,"line_end":134,"column_start":54,"column_end":58},"kind":{"Impl":{"id":35}},"from":{"krate":4,"index":5858},"to":{"krate":0,"index":352}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3696,"byte_end":3708,"line_start":146,"line_end":146,"column_start":50,"column_end":62},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":1534}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3768,"byte_end":3780,"line_start":147,"line_end":147,"column_start":50,"column_end":62},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":1544}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":3814,"byte_end":3826,"line_start":149,"line_end":149,"column_start":22,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":1703}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":4074,"byte_end":4086,"line_start":161,"line_end":161,"column_start":25,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":1714}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":4710,"byte_end":4722,"line_start":182,"line_end":182,"column_start":28,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":5715,"byte_end":5727,"line_start":215,"line_end":215,"column_start":37,"column_end":49},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":411},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":6239,"byte_end":6252,"line_start":235,"line_end":235,"column_start":28,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":6906,"byte_end":6919,"line_start":256,"line_end":256,"column_start":37,"column_end":50},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":426},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":7729,"byte_end":7741,"line_start":290,"line_end":290,"column_start":32,"column_end":44},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":392},"to":{"krate":1,"index":3804}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":8787,"byte_end":8799,"line_start":331,"line_end":331,"column_start":42,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":392},"to":{"krate":0,"index":266}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":11508,"byte_end":11520,"line_start":420,"line_end":420,"column_start":54,"column_end":66},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":392},"to":{"krate":0,"index":148}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":11724,"byte_end":11736,"line_start":428,"line_end":428,"column_start":45,"column_end":57},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":392},"to":{"krate":0,"index":168}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":13254,"byte_end":13266,"line_start":486,"line_end":486,"column_start":12,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":15031,"byte_end":15043,"line_start":543,"line_end":543,"column_start":19,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/iot-dev/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.13.2/src/lib.rs","byte_start":15459,"byte_end":15471,"line_start":557,"line_end":557,"column_start":12,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}}]}